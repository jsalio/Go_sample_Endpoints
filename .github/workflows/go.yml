# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

# This workflow will build and test a Go project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.21', '1.22' ] # Prueba con múltiples versiones de Go
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        cache: true # Habilita caché para módulos de Go

    - name: Verify format
      run: |
        gofmt -l .
        test -z "$(gofmt -l .)" # Falla si hay archivos mal formateados

    - name: Run linter
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        args: --timeout=3m

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.txt
        fail_ci_if_error: true
